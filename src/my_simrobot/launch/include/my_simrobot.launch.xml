<launch>

  <!-- URDF and TF support -->
  <group ns="mobile">
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find my_simrobot)/urdf/robot.urdf.xacro' ns:=mobile" />
    <!-- Put a robot in gazebo, make it look pretty -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -model simrobot -param robot_description"/>
  </group>

  <!-- <param name="robot_description" command="$(find xacro)/xacro.py $(find my_simrobot)/urdf/robot.urdf.xacro" /> -->
  <!-- Put a robot in gazebo, make it look pretty -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-urdf -model simrobot -param robot_description"/> -->

  <!--Load the joint controllers to param server-->
  <rosparam file="$(find my_simrobot)/param/simrobot_control.yaml" command="load"/>

  <!--Load controllers-->
  <node name="spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" 
    args="joint_state_controller left_wheel_position_controller right_wheel_position_controller"
    />  <!--mobile_base_controller-->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="/xbot" respawn="false" output="screen">
    <param name="publish_frequency" value="20.0"/>
  </node>

  <!-- To make the interface of simulation identical to real XBot -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"  args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find my_simrobot)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output/cmd_vel" to="cmd_vel"/>
  </node>


</launch>
